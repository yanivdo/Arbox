{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\client\\\\src\\\\components\\\\Floors.js\";\nimport React from \"react\";\nimport Elevators from \"./Elevators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Floors extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callElevator = floor => {\n      fetch(\"http://localhost/Building/elevatorCallApi\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          floor: floor\n        })\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.checkElevatorPlace();\n    };\n\n    this.checkElevatorPlace = () => {\n      fetch(\"http://localhost/Building/elevatorsPlaces\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      }).then(response => response.json()).then(result => {\n        this.setState({\n          elevatorsPlaces: result,\n          page: 1\n        });\n      });\n    };\n\n    this.state = {\n      page: 0,\n      floors: 10,\n      elevatorStatus: \"Call\",\n      speed: 1,\n      elevatorsPlaces: []\n    };\n  }\n\n  render() {\n    if (!this.state.page) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this);\n    }\n\n    var floorDetails = [];\n\n    for (var i = this.state.floors - 1; i >= 0; i--) {\n      let floor = i;\n      floorDetails.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `floorSection floorBlock_${i}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"floorNum\",\n          children: floor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Elevators, {\n          floor: i,\n          elevatorsPlace: this.state.elevatorsPlaces\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"elevatorCall\",\n          name: \"elevatorCall\",\n          onClick: () => this.callElevator(floor),\n          children: this.state.elevatorStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"floorsWrapper\",\n      children: floorDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Floors;","map":{"version":3,"sources":["D:/xampp/htdocs/client/src/components/Floors.js"],"names":["React","Elevators","Floors","Component","constructor","props","callElevator","floor","fetch","method","credentials","headers","Accept","body","JSON","stringify","then","response","json","result","console","log","componentDidMount","checkElevatorPlace","setState","elevatorsPlaces","page","state","floors","elevatorStatus","speed","render","floorDetails","i","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,YAXmB,GAWHC,KAAD,IAAW;AACtBC,MAAAA,KAAK,CAAC,2CAAD,EAA8C;AAC/CC,QAAAA,MAAM,EAAE,MADuC;AAE/CC,QAAAA,WAAW,EAAE,SAFkC;AAG/CC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAHsC;AAO/CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,UAAAA,KAAK,EAACA;AADW,SAAf;AAPyC,OAA9C,CAAL,CAUGS,IAVH,CAUSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVtB,EAWKF,IAXL,CAWWG,MAAD,IAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,OAbL;AAcH,KA1BkB;;AAAA,SA4BnBG,iBA5BmB,GA4BC,MAAM;AACtB,WAAKC,kBAAL;AACH,KA9BkB;;AAAA,SAgCnBA,kBAhCmB,GAgCE,MAAM;AACvBf,MAAAA,KAAK,CAAC,2CAAD,EAA8C;AAC/CC,QAAAA,MAAM,EAAE,MADuC;AAE/CE,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFsC;AAM/CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AANyC,OAA9C,CAAL,CAQGC,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASKF,IATL,CASWG,MAAD,IAAY;AACd,aAAKK,QAAL,CAAc;AACVC,UAAAA,eAAe,EAAEN,MADP;AAEVO,UAAAA,IAAI,EAAC;AAFK,SAAd;AAIH,OAdL;AAeH,KAhDkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE,CADG;AAETE,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,cAAc,EAAE,MAHP;AAITC,MAAAA,KAAK,EAAE,CAJE;AAKTL,MAAAA,eAAe,EAAE;AALR,KAAb;AAOH;;AAyCDM,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKJ,KAAL,CAAWD,IAAhB,EAAsB;AAClB,0BAAO;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIM,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,KAAKN,KAAL,CAAWC,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAC7C,UAAI1B,KAAK,GAAG0B,CAAZ;AACAD,MAAAA,YAAY,CAACE,IAAb,eACI;AAAK,QAAA,SAAS,EAAG,2BAA0BD,CAAE,EAA7C;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2B1B;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE0B,CAAlB;AAAqB,UAAA,cAAc,EAAE,KAAKN,KAAL,CAAWF;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,IAAI,EAAC,cAAnC;AAAkD,UAAA,OAAO,EAAE,MAAM,KAAKnB,YAAL,CAAkBC,KAAlB,CAAjE;AAAA,oBAA4F,KAAKoB,KAAL,CAAWE;AAAvG;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAvEgC;;AA0ErC,eAAe9B,MAAf","sourcesContent":["import React from \"react\";\r\nimport Elevators from \"./Elevators\";\r\nclass Floors extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            floors: 10,\r\n            elevatorStatus: \"Call\",\r\n            speed: 1,\r\n            elevatorsPlaces: []\r\n        };\r\n    }\r\n\r\n    callElevator = (floor) => {\r\n        fetch(\"http://localhost/Building/elevatorCallApi\", {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                floor:floor\r\n            }),\r\n        }).then((response) => response.json())\r\n            .then((result) => {\r\n                console.log(result);\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.checkElevatorPlace();\r\n    };\r\n\r\n    checkElevatorPlace = () => {\r\n        fetch(\"http://localhost/Building/elevatorsPlaces\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n            }),\r\n        }).then((response) => response.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    elevatorsPlaces: result,\r\n                    page:1\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.page) {\r\n            return <div className=\"Loading\"></div>;\r\n        }\r\n        var floorDetails = [];\r\n        for (var i = this.state.floors - 1; i >= 0; i--) {\r\n            let floor = i;\r\n            floorDetails.push(\r\n                <div className={`floorSection floorBlock_${i}`}>\r\n                    <div className=\"floorNum\">{floor}</div>\r\n                    <Elevators floor={i} elevatorsPlace={this.state.elevatorsPlaces} />\r\n                    <div className=\"elevatorCall\" name=\"elevatorCall\" onClick={() => this.callElevator(floor)}>{this.state.elevatorStatus}</div>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"floorsWrapper\">\r\n                {floorDetails}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Floors;"]},"metadata":{},"sourceType":"module"}